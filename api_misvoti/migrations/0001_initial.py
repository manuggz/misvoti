# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-04-02 18:27
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MiVotiUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('carnet', models.CharField(blank=True, max_length=10)),
                ('cedula', models.CharField(blank=True, max_length=12)),
                ('gdrive_id_json_plan', models.CharField(blank=True, max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuario',
                'verbose_name_plural': 'usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CarreraUsb',
            fields=[
                ('nombre', models.CharField(max_length=100)),
                ('codigo', models.CharField(max_length=10, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'carrera',
                'verbose_name_plural': 'carreras',
            },
        ),
        migrations.CreateModel(
            name='MateriaBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(blank=True, max_length=200)),
                ('codigo', models.CharField(blank=True, help_text='Por favor use el siguiente formato: <em>XXX-YYYY</em>.', max_length=10)),
                ('creditos', models.IntegerField(default=3)),
                ('horas_teoria', models.IntegerField(default=0)),
                ('horas_practica', models.IntegerField(default=0)),
                ('horas_laboratorio', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'materia base',
                'verbose_name_plural': 'materias bases',
            },
        ),
        migrations.CreateModel(
            name='Pensum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('PA', 'Pasantia Larga'), ('PG', 'Proyecto de grado a dedicaci\xf3n exclusiva'), ('ND', 'No definido')], default='ND', max_length=2)),
                ('carrera', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_misvoti.CarreraUsb')),
            ],
            options={
                'verbose_name': 'plan de estudio base',
                'verbose_name_plural': 'planes de estudio bases',
            },
        ),
        migrations.CreateModel(
            name='RelacionMateriaOpcional',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('materia_primera_opcion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materia_primera_opcion', to='api_misvoti.MateriaBase')),
                ('materia_segunda_opcion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materia_segunda_opcion', to='api_misvoti.MateriaBase')),
                ('pensum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_misvoti.Pensum')),
            ],
            options={
                'verbose_name': 'relacion materia opcional',
                'verbose_name_plural': 'relaciones de materias opcionales',
            },
        ),
        migrations.CreateModel(
            name='RelacionMateriaPensumBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_materia', models.CharField(choices=[('RG', 'Regular'), ('GE', 'General'), ('EL', 'Electiva libre'), ('EA', 'Electiva de Area'), ('EX', 'Extraplan')], default='RG', max_length=2)),
                ('materia_base', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api_misvoti.MateriaBase')),
                ('pensum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_misvoti.Pensum')),
            ],
        ),
        migrations.CreateModel(
            name='RelacionMateriaPrerrequisito',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_prerrequisito', models.CharField(choices=[('MA', 'Materia'), ('PC', 'Permiso de la coordinaci\xf3n'), ('1A', 'Primer a\xf1o aprobado'), ('2A', 'Segundo a\xf1o aprobado'), ('3A', 'Tercer a\xf1o aprobado'), ('4A', 'Cuarto a\xf1o aprobado'), ('5A', 'Quinto a\xf1o aprobado')], default='MA', max_length=2)),
                ('materia_cursar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materia_cursar', to='api_misvoti.MateriaBase')),
                ('materia_requerida', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='materias_requeridas', to='api_misvoti.MateriaBase')),
                ('pensum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_misvoti.Pensum')),
            ],
            options={
                'verbose_name': 'requisito',
                'verbose_name_plural': 'requisitos',
            },
        ),
        migrations.CreateModel(
            name='RelacionMateriasCorrequisito',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('materia_cursar_junta_a', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materia_cursar_junta_a', to='api_misvoti.MateriaBase')),
                ('materia_cursar_junta_b', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materia_cursar_junta_b', to='api_misvoti.MateriaBase')),
                ('pensum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_misvoti.Pensum')),
            ],
            options={
                'verbose_name': 'corequisito',
                'verbose_name_plural': 'corequisitos',
            },
        ),
        migrations.CreateModel(
            name='TrimestrePensum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo', models.CharField(choices=[('SD', 'Septiembre - Diciembre'), ('EM', 'Enero - Marzo'), ('AJ', 'Abril - Julio'), ('JA', 'Intensivo(Julio - Agosto)')], default='SD', max_length=2)),
                ('indice_orden', models.IntegerField(default=0)),
                ('pensum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trimestres_base', to='api_misvoti.Pensum')),
            ],
            options={
                'verbose_name': 'trimestre pensum',
                'verbose_name_plural': 'trimestres pensums',
            },
        ),
        migrations.AddField(
            model_name='relacionmateriapensumbase',
            name='trimestre_pensum',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api_misvoti.TrimestrePensum'),
        ),
        migrations.AlterUniqueTogether(
            name='carrerausb',
            unique_together=set([('nombre', 'codigo')]),
        ),
        migrations.AlterUniqueTogether(
            name='relacionmateriascorrequisito',
            unique_together=set([('materia_cursar_junta_a', 'materia_cursar_junta_b')]),
        ),
        migrations.AlterUniqueTogether(
            name='relacionmateriaopcional',
            unique_together=set([('materia_primera_opcion', 'materia_segunda_opcion')]),
        ),
        migrations.AlterUniqueTogether(
            name='pensum',
            unique_together=set([('carrera', 'tipo')]),
        ),
    ]
